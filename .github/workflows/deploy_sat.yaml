name: Deploy SAT Tool

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Initialize Terraform with Backend Configuration
        run: terraform init -backend-config="bucket=widgetco.co" \
                            -backend-config="key=terraform/state/terraform.tfstate" \
                            -backend-config="region=us-east-1" \
                            -backend-config="encrypt=true"

      - name: Set Databricks Environment Variables
        run: |
          echo "TF_VAR_databricks_url=${{ secrets.DATABRICKS_URL }}" >> $GITHUB_ENV
          echo "TF_VAR_workspace_id=${{ secrets.WORKSPACE_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_account_console_id=${{ secrets.ACCOUNT_CONSOLE_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_client_id=${{ secrets.CLIENT_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_client_secret=${{ secrets.CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "TF_VAR_analysis_schema_name=${{ secrets.ANALYSIS_SCHEMA_NAME }}" >> $GITHUB_ENV
          echo "TF_VAR_proxies=${{ secrets.PROXIES }}" >> $GITHUB_ENV
          echo "TF_VAR_run_on_serverless=${{ secrets.RUN_ON_SERVERLESS }}" >> $GITHUB_ENV
          echo "TF_VAR_use_sp_auth=${{ secrets.USE_SP_AUTH }}" >> $GITHUB_ENV

      - name: Validate Terraform
        run: terraform validate

      - name: Plan Terraform Deployment
        run: terraform plan -out=tfplan

      - name: Apply Terraform Changes
        run: terraform apply -auto-approve tfplan
